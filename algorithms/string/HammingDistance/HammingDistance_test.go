// ********RoostGPT********
/*
Test generated by RoostGPT for test java-turbo-test using AI Type Open AI and AI Model gpt-4-1106-preview

ROOST_METHOD_HASH=hammingDistance_0d749de292
ROOST_METHOD_SIG_HASH=hammingDistance_f17e8d7bc0


*/

// ********RoostGPT********
package HammingDistance

import (
	"testing"
)

func TestHammingDistanceWithMultipleDifferences(t *testing.T) {
	a := "Golang"
	b := "Genome"
	expectedDiffCount := 3
	if got := hammingDistance(a, b); got != expectedDiffCount {
		t.Errorf("hammingDistance(%s, %s) = %v; want %v", a, b, got, expectedDiffCount)
	}
}

func TestHammingDistanceWithNonASCIIChars(t *testing.T) {
	a := "Gölang"
	b := "Gølang"
	expectedUniDiffCount := 1
	if got := hammingDistance(a, b); got != expectedUniDiffCount {
		t.Errorf("hammingDistance(%s, %s) = %v; want %v", a, b, got, expectedUniDiffCount)
	}
}

func TestHammingDistanceWithEmptyStrings(t *testing.T) {
	a := ""
	b := ""
	if got := hammingDistance(a, b); got != 0 {
		t.Errorf("hammingDistance(%s, %s) = %v; want %v", a, b, got, 0)
	}
}

func TestHammingDistanceWithSpecialCharsAndSpaces(t *testing.T) {
	a := "Go lang"
	b := "Gx l@ng"
	expectedSpecialCharDiffCount := 2
	if got := hammingDistance(a, b); got != expectedSpecialCharDiffCount {
		t.Errorf("hammingDistance(%s, %s) = %v; want %v", a, b, got, expectedSpecialCharDiffCount)
	}
}

