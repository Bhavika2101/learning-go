// Test generated by RoostGPT for test golang-level0-PassGen using AI Type Open AI and AI Model gpt-4-1106-preview

package main

import (
	"testing"
	"math/rand"
	"time"
)

func TestGeneratePassword(t *testing.T) {
	t.Run("Positive Case: Generate password with valid length", func(t *testing.T) {
		length := 10 // A valid password length
		rand.Seed(time.Now().UnixNano())
		password := generatePassword(length)
		if len(password) != length {
			t.Errorf("Expected password of length %d, but got %d", length, len(password))
		}
	})

	t.Run("Negative Case: Generate password with invalid length", func(t *testing.T) {
		length := -5 // An invalid password length
		rand.Seed(time.Now().UnixNano())
		password := generatePassword(length)
		if len(password) != 0 {
			t.Errorf("Expected password of length 0, but got %d", len(password))
		}
	})
}

