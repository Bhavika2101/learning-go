// Test generated by RoostGPT for test golang-level0-PassGen using AI Type Open AI and AI Model gpt-4-1106-preview

package main

import (
	"testing"
)

func TestGeneratePassword(t *testing.T) {
	length := 10
	password := generatePassword(length)
	if len(password) != length {
		t.Errorf("Expected password of length %d, but got %d", length, len(password))
	}
	// Check for at least one digit
	digits := "0123456789"
	digitFound := false
	for _, char := range password {
		if containsRune(digits, char) {
			digitFound = true
			break
		}
	}
	if !digitFound {
		t.Errorf("Expected at least one digit in the password, got %v", password)
	}
	// Check for at least one special character
	specials := "~=+%^*/()[]{}/!@#$?|"
	specialFound := false
	for _, char := range password {
		if containsRune(specials, char) {
			specialFound = true
			break
		}
	}
	if !specialFound {
		t.Errorf("Expected at least one special character in the password, got %v", password)
	}
}

// Helper function to check if a string contains a rune
func containsRune(s string, r rune) bool {
	for _, char := range s {
		if char == r {
			return true
		}
	}
	return false
}

